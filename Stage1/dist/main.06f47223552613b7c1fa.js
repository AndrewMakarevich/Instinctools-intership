(()=>{"use strict";const e=class{constructor(e,t,n){this.name=e,this.date=t,this.callback=n,this.state=this.getDateDiff(t)<0?"overdue":"active",this.eventActivation=this.setEventActivation(),this.eventActivation(t,n)}getDateDiff(e){return e.getTime()-Date.now()}setEventActivation(){let e;return function(t,n){const s=this.getDateDiff(t);s>0&&(clearTimeout(e),e=setTimeout((()=>(n(),this.state="overdue")),s))}}changeEventDate(e){if(!e instanceof Date)throw"Incorrect date param";this.date=e,this.eventActivation(e,this.callback)}changeEventName(e){this.name=e}},t=()=>{console.log("HI, my name is Andrew")};console.log("emmmmmmlol");const n=new class{constructor(){this._events=[]}getWeekFromDate(e){const t=new Date(e.getFullYear(),0,1),n=Math.floor((e-t)/864e5);return Math.ceil(n/7)}addEvent(t){if(!(t instanceof e))throw"Incorrect object tried to add to the calendar";this._events.push(t)}deleteEvent(e){return this._events=this._events.filter((t=>JSON.stringify(t)!==JSON.stringify(e)))}getEventsByYear(e,t){return this._events.filter((n=>n.date.getFullYear()>=e&&n.date.getFullYear()<=t))}getEventsByMonth(e,t){return this._events.filter((n=>n.date.getMonth()>=e&&n.date.getMonth()<=t))}getEventsByWeek(e,t){return this._events.filter((n=>this.getWeekFromDate(n.date)>=e&&this.getWeekFromDate(n.date)<=t))}get events(){return this._events}},s=new e("Test",new Date(Date.now()+1e4),t);s.changeEventDate(new Date(Date.now()+5e3)),s.changeEventName("New event name");const a=new e("Test",new Date(Date.now()-1e4),t);n.addEvent(s),n.addEvent(a),console.log(n.events),console.log(n.getEventsByYear(2021,2022)),console.log(n.getEventsByMonth(2,4)),console.log(n.getEventsByWeek(7,8))})();